@page "/"
@using NotesApp.Application.Notes.Queries.Search
@using NotesApp.Application.Notes.Commands.Delete
@rendermode InteractiveServer

@inject ISender Mediator

<PageTitle>Notes Page</PageTitle>

<h1>Notes Page</h1>

<p>This component demonstrates showing data.</p>

@if (Notes == null)
{
    <p><em>Loading...</em></p>
}
else if (Notes.Count == 0)
{
    <p>There is no created notes yet</p>
}
else
{
    foreach (var note in Notes)
    {
        <hi>@note.Title</hi>
        <p>@note.Content</p>
        <button @onclick="() => DeleteNote(note.NoteId)">Delete</button>
        <br/>
    }
}

@code
{
    protected List<NoteDTO>? Notes;

    protected override async Task OnInitializedAsync()
    {
        var result = await Mediator.Send(new SearchNoteQuery());

        if (result.IsSuccess)
            Notes = result.Value.ToList();
    }

    private async Task DeleteNote(int noteId)
    {
        var result = await Mediator.Send(new DeleteNoteCommand(noteId));

        if (result.IsSuccess) await OnInitializedAsync();
    }
}
